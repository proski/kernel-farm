#! /bin/bash

set -e
trap 'echo -e "\e[31mUnexpected failure, terminated!\e[0m"' exit
. $HOME/.farmrc

if test -d ath_rate; then
	flavor=madwifi
	target=modules
	cleanargs="KERNELRELEASE=0"
fi

if test -f utils/ndiswrapper; then
	flavor=ndiswrapper
	target=driver
fi

if test -d drivers/ssb; then
	flavor=backports
	target=modules
fi

error=
for bintree in $(ls -d $farmbin/* | sort -V); do
	arch=
	if test -r $bintree/configured-i386; then
		arch=i386
		ccflags=-m32
	fi
	if test -r $bintree/configured-x86_64; then
		arch=x86_64
		ccflags=-m64
	fi
	test -n "$arch" || continue
	log=Log-$(basename $bintree)
	rm -f $log $log-ok $log-error
	treeargs="KBUILD=$bintree KERNELPATH=$bintree KERNEL_PATH=$bintree \
		  KLIB_BUILD=$bintree"
	$make clean $treeargs $cleanargs VERSION_HEADER=. >/dev/null
	if test "$flavor" = "backports"; then
		$make ARCH=$arch $treeargs defconfig-wifi >/dev/null
	fi
	echo -n "Checking $bintree "
	if $make HOSTCC="$ucc $ucflags" CC="$kcc $ccflags" \
	     ARCH=$arch $treeargs C=2 CF="-D__CHECK_ENDIAN__" \
	     $target >$log 2>&1; then
		mv $log $log-ok
		echo -e "\e[32mOK\e[0m"
	else
		error=1
		mv $log $log-error
		echo -e "\e[31mERROR\e[0m"
	fi
done

trap - exit
if test -z "$error"; then
		echo -e "\e[32mAll OK\e[0m"
		exit 0
	else
		echo -e "\e[31mErrors found\e[0m"
		exit 1
fi
